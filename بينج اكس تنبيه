import requests
import time
import hmac
import hashlib
import base64
import urllib.parse
import datetime

# Telegram bot data
bot_token = "7842436262:AAHPMbzYO-Kzrl5k33Gdw4yc_6i2qcAnnik"
chat_id = "5316104346"

# BingX API data
api_key = "BA0ipq2dFUZ7JiDTy41fkMdX2QX2 ni7FrXQQ93ZCvo1Hsj7gSYrkrkQk4 hvTGkeeu0ekrrBAZHDmJFNTZPIyA"
secret_key = "mpawe74izq7jFwcblGqKFXDYQ4uwiQLrLF7w VseJ1qEyVZWLziUuY9HCV6wASr12K8pqlwY bo4RG8OeJKWFndA"

# List of trading pairs
symbols = ["BTC-USDT", "ETH-USDT", "SOL-USDT", "XRP-USDT", "BNB-USDT"]

# Function to send a message to Telegram
def send_telegram_message(message):
    url = f"https://api.telegram.org/bot{bot_token}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": message
    }
    try:
        response = requests.post(url, data=payload)
        if response.status_code != 200:
            print("Error sending message:", response.text)
    except Exception as e:
        print("Exception:", e)

# Function to get the current price from BingX
def get_price(symbol):
    url = "https://open-api.bingx.com/openApi/spot/v1/ticker/price"
    params = {
        "symbol": symbol
    }
    headers = {
        "X-BX-APIKEY": api_key
    }
    try:
        response = requests.get(url, params=params, headers=headers)
        data = response.json()
        return float(data['data']['price'])
    except Exception as e:
        print("Exception getting price:", e)
        return None

# Function to predict the next 6 candles (simple logic, can be improved)
def predict_next_6_candles(current_price):
    prediction = []
    for i in range(6):
        delta = 0.1 * (i+1)  # Simple random delta for demo
        prediction.append(round(current_price + delta, 2))
    return prediction

# Main loop
def main():
    while True:
        final_message = ""
        for symbol in symbols:
            price = get_price(symbol)
            if price:
                prediction = predict_next_6_candles(price)
                final_message += f"\n\n** {symbol} **\nCurrent Price: {price}\nNext 6 Candles Prediction: {prediction}\n"
        
        final_message += f"\n\nUpdate Time: {datetime.datetime.now().strftime('%H:%M:%S')}"
        send_telegram_message(final_message)

        print("Message sent to Telegram.")
        time.sleep(60)  # Wait 60 seconds before the next update

if __name__ == "__main__":
    main()
